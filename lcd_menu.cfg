#####################################################################
# Custom LCD Menu System
#####################################################################
[include ./lights_menu.cfg]                     ## Enables Lights menu
[include ./klickyprobe_menu.cfg]                ## Enables KlickyProbe menu

### menu main ###
[menu __main]
type: list
name: Main

## Disable Octoprint menu option
[menu __main __octoprint]
type: disabled

## Disable SDCard menu option
[menu __main __sdcard]
type: disabled

[include ./prep_menu.cfg]                       ## Enables Prep menu

### menu print ###
[menu __main __print]
type: list
#enable: {printer.virtual_sdcard.is_active == True}
index: 1
name: Print

[menu __main __print __pause]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Pause Print
gcode:
    PAUSE

[menu __main __print __resume]
type: command
enable: {printer.print_stats.state == "Paused"}
name: Resume Print
gcode:
    RESUME

[menu __main __print __cancel]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Cancel Print
gcode:
    CANCEL_PRINT

### menu tune ###
[menu __main __tune]
type: list
enable: {printer.idle_timeout.state == "Printing"}
index: 2
name: Tune

[menu __main __tune __offsetz]
type: input
name: Offset Z:{'%05.3f' % menu.input}
input: {printer.gcode_move.homing_origin.z}
input_min: -5
input_max: 5
input_step: 0.005
realtime: True
gcode:
    SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1

[menu __main __tune __flow]
type: input
name: Flow: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.extrude_factor}
input_min: 0.01
input_max: 2
input_step: 0.01
realtime: True
gcode:
    M221 S{'%d' % (menu.input*100)}

[menu __main __tune __speed]
type: input
name: Speed: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.speed_factor}
input_min: 0.01
input_max: 5
input_step: 0.01
realtime: True
gcode:
    M220 S{'%d' % (menu.input*100)}

[menu __main __tune __fanspeed]
type: input
enable: {'fan' in printer}
name: Fan speed: {'%3d' % (menu.input*100)}%
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 0.01
gcode:
    M106 S{'%d' % (menu.input*255)}

[menu __main __tune __firmwareretract]
type: list
name: Retraction
enable: {('firmware_retraction' in printer)}

[menu __main __tune __firmwareretract __retractdist]
type: input
name: Retract: {'%.2f' % menu.input}
input: {printer.firmware_retraction.retract_length}
input_min: 0
input_max: 10
input_step: 0.01
realtime: True
gcode:
    SET_RETRACTION  RETRACT_LENGTH={'%.2f' % menu.input}

[menu __main __tune __firmwareretract __unretractdist]
type: input
name: Unretract: {'%.2f' % menu.input}
input: {printer.firmware_retraction.unretract_extra_length}
input_min: 0
input_max: 5
input_step: 0.01
realtime: True
gcode:
    SET_RETRACTION  UNRETRACT_EXTRA_LENGTH={'%.2f' % menu.input}

[menu __main __tune __firmwareretract __retractspeed]
type: input
name: Ret_Speed:{'%1d' % menu.input}
input: {printer.firmware_retraction.retract_speed}
input_min: 0
input_max: 100
input_step: 1
realtime: True
gcode:
    SET_RETRACTION  RETRACT_SPEED={'%1d' % menu.input}

[menu __main __tune __firmwareretract __unretractspeed]
type: input
name: Unr_Speed:{'%1d' % menu.input}
input: {printer.firmware_retraction.unretract_speed}
input_min: 0
input_max: 100
input_step: 1
realtime: True
gcode:
    SET_RETRACTION  UNRETRACT_SPEED={'%1d' % menu.input}

[menu __main __tune __pressureadvance]
type: list
name: Pressure Advance
index: 5
enable: {'pressure_advance' in printer}


[menu __main __tune __pressureadvance __pa]
type: input
name: Press_Adv:{'%.3f' % menu.input}
enable: {'pressure_advance' in printer}
input: {printer.extruder.pressure_advance}
input_min: 0
input_max: 10
input_step: 0.001
realtime: True
gcode:
    SET_PRESSURE_ADVANCE ADVANCE={'%f' % menu.input}

[menu __main __tune __pressureadvance __smooth]
type: input
name: PA_Smooth:{'%.2f' % menu.input}
enable: {'pressure_advance' in printer}
input: {printer.extruder.smooth_time}
input_min: 0
input_max: 0.2
input_step: 0.01
realtime: True
gcode:
    SET_PRESSURE_ADVANCE SMOOTH_TIME={'%f' % menu.input}

[menu __main __tune __printerlimits __maxvelocity]
type: input
name: Max_Veloc:{'%.d' % menu.input}
input: {printer.toolhead.max_velocity}
input_min: 1
input_max: 1000
input_step: 1
realtime: True
gcode:
    SET_VELOCITY_LIMIT VELOCITY={'%d' % menu.input}

[menu __main __tune __printerlimits __maxaccel]
type: input
name: Max_Accel:{'%.d' % menu.input}
input: {printer.toolhead.max_accel}
input_min: 1
input_max: 10000
input_step: 10
realtime: True
gcode:
    SET_VELOCITY_LIMIT ACCEL={'%d' % menu.input}

[menu __main __tune __printerlimits __maxacceltodecel]
type: input
name: Ac_To_Dec:{'%.d' % menu.input}
input: {printer.toolhead.max_accel_to_decel}
input_min: 1
input_max: 10000
input_step: 10
realtime: True
gcode:
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={'%d' % menu.input}

[menu __main __tune __printerlimits __squarecornervelocity]
type: input
name: Sq_Co_Vel:{'%.d' % menu.input}
input: {printer.toolhead.square_corner_velocity}
input_min: 0
input_max: 100
input_step: 1
realtime: True
gcode:
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={'%d' % menu.input}

### menu control ###
[include ./control_menu.cfg]                    ## Enables Lights menu

### menu filament ###
[include ./filament_menu.cfg]                   ## Enables Filament menu

### menu calibration ###
[include ./calibration_menu.cfg]                ## Enables Calibration menu

### menu setup ###
[menu __main __setup]
type: list
index: 7
enable: {not printer.idle_timeout.state == "Printing"}
name: Setup

[menu __main __setup __save_config]
type: command
name: Save config
gcode: SAVE_CONFIG

[menu __main __setup __restart]
type: list
name: Restart

[menu __main __setup __restart __host_restart]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Restart host
gcode: RESTART

[menu __main __setup __restart __firmware_restart]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Restart FW
gcode: FIRMWARE_RESTART

[menu __main __setup __tuning]
type: disabled

[menu __main __setup __calib]
type: disabled

[menu __main __setup __dump]
type: command
name: Dump parameters
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s"
                               % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}

### menu network ###
[menu __main __network]
type: list
name: Network
enable: {('network_status' in printer)}

[menu __main __network _mdns]
type: command
name: mDNS: {printer.network_status.mdns}

[menu __main __network _ethip]
type: command
name: Eth IP: {printer.network_status.ethip}

[menu __main __network _wifissid]
type: command
name: Wifi SSID: {printer.network_status.wifissid}

[menu __main __network _wifiip]
type: command
name: Wifi IP: {printer.network_status.wifiip}